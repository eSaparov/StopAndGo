# Generated by Django 4.2 on 2023-04-07 08:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=25, unique=True, verbose_name='Username')),
                ('name', models.CharField(max_length=25, verbose_name='Name')),
                ('surname', models.CharField(max_length=25, verbose_name='Surname')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Operator')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Project')),
                ('fullname', models.TextField(max_length=200, verbose_name='Full name of Project')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Quality_issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Issue')),
                ('description', models.TextField(max_length=200, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Quality issue',
                'verbose_name_plural': 'Quality issues',
            },
        ),
        migrations.CreateModel(
            name='Safety_issue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Issue')),
                ('description', models.TextField(max_length=200, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Safety issue',
                'verbose_name_plural': 'Safety issues',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(max_length=50, verbose_name='Room index')),
                ('description', models.TextField(max_length=200, verbose_name='Room name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.project', verbose_name='Project')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Responsible')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
            },
        ),
        migrations.CreateModel(
            name='Report_Safety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='safety', verbose_name='Photo')),
                ('name', models.CharField(max_length=50, verbose_name='Issue name')),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(verbose_name='Last Updated')),
                ('is_active', models.BooleanField(verbose_name='Activity')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('On going', 'On going'), ('Solved', 'Solved'), ('Waiting for approval', 'Waiting for approval')], default='Active', max_length=50, verbose_name='Status')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safety_issue_author', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safety_issue_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Responsible')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Safety report',
                'verbose_name_plural': 'Safety reports',
            },
        ),
        migrations.CreateModel(
            name='Report_Quality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='quality', verbose_name='photo')),
                ('created', models.DateTimeField(auto_now=True)),
                ('updated', models.DateTimeField(verbose_name='Last Updated')),
                ('is_active', models.BooleanField(verbose_name='Activity')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('On going', 'On going'), ('Solved', 'Solved'), ('Waiting for approval', 'Waiting for approval')], default='Active', max_length=50, verbose_name='Status')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_issue_author', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.quality_issue', verbose_name='Issue')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_issue_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Responsible')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.room', verbose_name='Room')),
            ],
            options={
                'verbose_name': 'Quality report',
                'verbose_name_plural': 'Quality reports',
            },
        ),
    ]
